<?xml version="1.0"?>
<robot name="robogardener" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Constants -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  
  <!-- Physical dimensions (converted to meters) -->
  <xacro:property name="wheel_width" value="0.055" />  <!-- 5.5cm -->
  <xacro:property name="wheel_radius" value="0.0575" /> <!-- 11.5cm diameter -->
  
  <!-- Wheel positions -->
  <xacro:property name="wheelbase_x" value="0.215" /> <!-- 21.5cm front-to-back -->
  <xacro:property name="wheelbase_y" value="0.195" /> <!-- 19.5cm left-to-right -->
  
  <!-- Chassis dimensions -->
  <xacro:property name="chassis_length" value="0.37" /> <!-- 37cm -->
  <xacro:property name="chassis_width" value="0.195" /> <!-- 19.5cm -->
  <xacro:property name="chassis_height" value="0.03" /> <!-- 3cm -->
  <xacro:property name="base_height" value="0.06" /> <!-- 6cm rod height -->

  <!-- Mass properties (estimated) -->
  <xacro:property name="chassis_mass" value="2.0" /> <!-- kg -->
  <xacro:property name="wheel_mass" value="0.3" /> <!-- kg -->

  <link name="odom">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>

  <joint name="odom_joint" type="floating">
    <parent link="odom"/>
    <child link="base_link"/>
  </joint>

  <!-- Main chassis link -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
      <material name="black"/>
    </visual>
    
    <collision>
      <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 ${base_height/2}"/>
      <mass value="${chassis_mass}"/>
      <inertia
        ixx="${chassis_mass/12 * (chassis_width*chassis_width + chassis_height*chassis_height)}" ixy="0" ixz="0"
        iyy="${chassis_mass/12 * (chassis_length*chassis_length + chassis_height*chassis_height)}" iyz="0"
        izz="${chassis_mass/12 * (chassis_length*chassis_length + chassis_width*chassis_width)}"/>
    </inertial>
  </link>

  <!-- All wheels are FIXED to chassis (mechanically linked) -->
  
  <!-- Front Left Wheel -->
  <link name="left_f_wheel">
    <visual>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="yellow"/>
    </visual>
    
    <collision>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <mass value="${wheel_mass}"/>
      <inertia
        ixx="${wheel_mass/12 * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}" ixy="0" ixz="0"
        iyy="${wheel_mass/12 * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}" iyz="0"
        izz="${wheel_mass/2 * wheel_radius*wheel_radius}"/>
    </inertial>
  </link>

  <joint name="left_f_wheel_joint" type="fixed">
    <parent link="base_link"/>
    <child link="left_f_wheel"/>
    <origin xyz="${wheelbase_x/2} ${-wheelbase_y/2} 0" rpy="0 0 0"/>
  </joint>

  <!-- Front Right Wheel (mirror of left) -->
  <link name="right_f_wheel">
    <!-- Same visual/collision/inertial as left wheel -->
    <visual>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="yellow"/>
    </visual>
    
    <collision>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <mass value="${wheel_mass}"/>
      <inertia
        ixx="${wheel_mass/12 * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}" ixy="0" ixz="0"
        iyy="${wheel_mass/12 * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}" iyz="0"
        izz="${wheel_mass/2 * wheel_radius*wheel_radius}"/>
    </inertial>
  </link>

  <joint name="right_f_wheel_joint" type="fixed">
    <parent link="base_link"/>
    <child link="right_f_wheel"/>
    <origin xyz="${wheelbase_x/2} ${wheelbase_y/2} 0" rpy="0 0 0"/>
  </joint>

  <!-- Rear Wheels (same as front but negative x position) -->
  <link name="left_b_wheel">
    <visual>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="blue"/>
    </visual>
    
    <collision>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <mass value="${wheel_mass}"/>
      <inertia
        ixx="${wheel_mass/12 * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}" ixy="0" ixz="0"
        iyy="${wheel_mass/12 * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}" iyz="0"
        izz="${wheel_mass/2 * wheel_radius*wheel_radius}"/>
    </inertial>
  </link>
  
  <joint name="left_b_wheel_joint" type="fixed">
    <parent link="base_link"/>
    <child link="left_b_wheel"/>
    <origin xyz="${-wheelbase_x/2} ${-wheelbase_y/2} 0" rpy="0 0 0"/>
  </joint>

  <link name="right_b_wheel">
    <visual>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="blue"/>
    </visual>
    
    <collision>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <mass value="${wheel_mass}"/>
      <inertia
        ixx="${wheel_mass/12 * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}" ixy="0" ixz="0"
        iyy="${wheel_mass/12 * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}" iyz="0"
        izz="${wheel_mass/2 * wheel_radius*wheel_radius}"/>
    </inertial>
  </link>
  
  <joint name="right_b_wheel_joint" type="fixed">
    <parent link="base_link"/>
    <child link="right_b_wheel"/>
    <origin xyz="${-wheelbase_x/2} ${wheelbase_y/2} 0" rpy="0 0 0"/>
  </joint>

  <!-- Virtual drive joint for the single motor -->
  <link name="virtual_drive_link">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  
  <joint name="main_drive_joint" type="continuous">
    <parent link="base_link"/>
    <child link="virtual_drive_link"/>
    <axis xyz="0 1 0"/>
  </joint>

  <ros2_control name="SingleMotorDrive" type="system">
    <hardware>
      <plugin>ros2_control_gz/Ros2ControlGazeboSystem</plugin>
    </hardware>
    <joint name="main_drive_joint">
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
  </ros2_control>

  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="diff_drive">
      <command_topic>cmd_vel</command_topic>
      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
      <wheel_separation>${wheelbase_y}</wheel_separation> <!-- Distance between wheels -->
      <wheel_diameter>${2*wheel_radius}</wheel_diameter>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
    </plugin>
  </gazebo>

</robot>